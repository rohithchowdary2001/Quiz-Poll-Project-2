{"ast":null,"code":"var _jsxFileName = \"/home/mounikavemula/Documents/PROJECT/quizManagement/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport api from '../services/api';\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Auth provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [loading, setLoading] = useState(true);\n\n  // Debug function\n  const debugState = () => {\n    console.log('AuthContext - Current state:', {\n      user: user,\n      token: token,\n      loading: loading,\n      localStorage_token: localStorage.getItem('token')\n    });\n  };\n\n  // Check if user is authenticated on app load\n  useEffect(() => {\n    console.log('AuthContext - useEffect triggered, verifying token...');\n    const verifyToken = async () => {\n      const storedToken = localStorage.getItem('token');\n      console.log('AuthContext - Stored token:', storedToken ? 'exists' : 'not found');\n      if (storedToken) {\n        try {\n          // Set token in API headers\n          api.defaults.headers.common['Authorization'] = `Bearer ${storedToken}`;\n          console.log('AuthContext - Verifying token with backend...');\n\n          // Verify token with backend\n          const response = await api.get('/auth/verify');\n          console.log('AuthContext - Token verification successful:', response.data.user);\n          setUser(response.data.user);\n          setToken(storedToken);\n        } catch (error) {\n          // Token is invalid, remove it\n          console.log('AuthContext - Token verification failed:', error.message);\n          localStorage.removeItem('token');\n          delete api.defaults.headers.common['Authorization'];\n          setUser(null);\n          setToken(null);\n        }\n      }\n      setLoading(false);\n      console.log('AuthContext - Verification complete, loading set to false');\n    };\n    verifyToken();\n  }, []);\n\n  // Login function\n  const login = async (userData, userToken) => {\n    try {\n      console.log('AuthContext - Login called with:', userData, 'token:', userToken ? 'provided' : 'missing');\n\n      // Store token\n      localStorage.setItem('token', userToken);\n      setToken(userToken);\n\n      // Set token in API headers\n      api.defaults.headers.common['Authorization'] = `Bearer ${userToken}`;\n\n      // Store user data\n      setUser(userData);\n      console.log('AuthContext - Login successful, user set:', userData);\n      debugState();\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error('AuthContext - Login error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    console.log('AuthContext - Logout called');\n    localStorage.removeItem('token');\n    delete api.defaults.headers.common['Authorization'];\n    setUser(null);\n    setToken(null);\n    debugState();\n  };\n\n  // Check if user has specific role\n  const hasRole = requiredRole => {\n    return (user === null || user === void 0 ? void 0 : user.role) === requiredRole;\n  };\n\n  // Role check helpers\n  const isAdmin = () => (user === null || user === void 0 ? void 0 : user.role) === 'admin';\n  const isProfessor = () => (user === null || user === void 0 ? void 0 : user.role) === 'professor';\n  const isStudent = () => (user === null || user === void 0 ? void 0 : user.role) === 'student';\n\n  // Get user info (for debugging)\n  const getUserInfo = () => ({\n    user: user,\n    token: token,\n    isAuthenticated: !!user,\n    role: user === null || user === void 0 ? void 0 : user.role\n  });\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    logout,\n    hasRole,\n    isAdmin,\n    isProfessor,\n    isStudent,\n    getUserInfo,\n    debugState\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n};\n\n// Custom hook to use auth context\n_s(AuthProvider, \"6yaUUgx9bt/8SVo6kb7BgPC/qRU=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","debugState","console","log","localStorage_token","verifyToken","storedToken","defaults","headers","common","response","get","data","error","message","removeItem","login","userData","userToken","setItem","success","logout","hasRole","requiredRole","role","isAdmin","isProfessor","isStudent","getUserInfo","isAuthenticated","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/home/mounikavemula/Documents/PROJECT/quizManagement/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport api from '../services/api';\n\n// Create context\nconst AuthContext = createContext();\n\n// Auth provider component\nexport const AuthProvider = ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [token, setToken] = useState(localStorage.getItem('token'));\n    const [loading, setLoading] = useState(true);\n\n    // Debug function\n    const debugState = () => {\n        console.log('AuthContext - Current state:', {\n            user: user,\n            token: token,\n            loading: loading,\n            localStorage_token: localStorage.getItem('token')\n        });\n    };\n\n    // Check if user is authenticated on app load\n    useEffect(() => {\n        console.log('AuthContext - useEffect triggered, verifying token...');\n        const verifyToken = async () => {\n            const storedToken = localStorage.getItem('token');\n            console.log('AuthContext - Stored token:', storedToken ? 'exists' : 'not found');\n            \n            if (storedToken) {\n                try {\n                    // Set token in API headers\n                    api.defaults.headers.common['Authorization'] = `Bearer ${storedToken}`;\n                    console.log('AuthContext - Verifying token with backend...');\n                    \n                    // Verify token with backend\n                    const response = await api.get('/auth/verify');\n                    console.log('AuthContext - Token verification successful:', response.data.user);\n                    \n                    setUser(response.data.user);\n                    setToken(storedToken);\n                } catch (error) {\n                    // Token is invalid, remove it\n                    console.log('AuthContext - Token verification failed:', error.message);\n                    localStorage.removeItem('token');\n                    delete api.defaults.headers.common['Authorization'];\n                    setUser(null);\n                    setToken(null);\n                }\n            }\n            setLoading(false);\n            console.log('AuthContext - Verification complete, loading set to false');\n        };\n\n        verifyToken();\n    }, []);\n\n    // Login function\n    const login = async (userData, userToken) => {\n        try {\n            console.log('AuthContext - Login called with:', userData, 'token:', userToken ? 'provided' : 'missing');\n            \n            // Store token\n            localStorage.setItem('token', userToken);\n            setToken(userToken);\n            \n            // Set token in API headers\n            api.defaults.headers.common['Authorization'] = `Bearer ${userToken}`;\n            \n            // Store user data\n            setUser(userData);\n            \n            console.log('AuthContext - Login successful, user set:', userData);\n            debugState();\n            return { success: true };\n        } catch (error) {\n            console.error('AuthContext - Login error:', error);\n            return { success: false, error: error.message };\n        }\n    };\n\n    // Logout function\n    const logout = () => {\n        console.log('AuthContext - Logout called');\n        localStorage.removeItem('token');\n        delete api.defaults.headers.common['Authorization'];\n        setUser(null);\n        setToken(null);\n        debugState();\n    };\n\n    // Check if user has specific role\n    const hasRole = (requiredRole) => {\n        return user?.role === requiredRole;\n    };\n\n    // Role check helpers\n    const isAdmin = () => user?.role === 'admin';\n    const isProfessor = () => user?.role === 'professor';\n    const isStudent = () => user?.role === 'student';\n\n    // Get user info (for debugging)\n    const getUserInfo = () => ({\n        user: user,\n        token: token,\n        isAuthenticated: !!user,\n        role: user?.role\n    });\n\n    const value = {\n        user,\n        token,\n        loading,\n        login,\n        logout,\n        hasRole,\n        isAdmin,\n        isProfessor,\n        isStudent,\n        getUserInfo,\n        debugState\n    };\n\n    return (\n        <AuthContext.Provider value={value}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\n// Custom hook to use auth context\nexport const useAuth = () => {\n    const context = useContext(AuthContext);\n    if (!context) {\n        throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n};\n\nexport default AuthContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}