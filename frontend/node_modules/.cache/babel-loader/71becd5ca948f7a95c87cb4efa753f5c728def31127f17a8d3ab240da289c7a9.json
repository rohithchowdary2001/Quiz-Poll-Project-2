{"ast":null,"code":"import { api, endpoints } from './api';\nconst authService = {\n  // Login user\n  login: async credentials => {\n    try {\n      const response = await api.post(endpoints.auth.login, credentials);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  },\n  // Register user\n  register: async userData => {\n    try {\n      const response = await api.post(endpoints.auth.register, userData);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  },\n  // Logout user\n  logout: async () => {\n    try {\n      await api.post(endpoints.auth.logout);\n    } catch (error) {\n      // Even if logout fails on server, we still want to clear local state\n      console.error('Logout error:', error);\n    }\n  },\n  // Verify token\n  verifyToken: async () => {\n    try {\n      const response = await api.get(endpoints.auth.verify);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  },\n  // Get user profile\n  getProfile: async () => {\n    try {\n      const response = await api.get(endpoints.auth.profile);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  },\n  // Update user profile\n  updateProfile: async profileData => {\n    try {\n      const response = await api.put(endpoints.auth.profile, profileData);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  },\n  // Change password\n  changePassword: async passwordData => {\n    try {\n      const response = await api.put(endpoints.auth.changePassword, passwordData);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  }\n};\nexport default authService;","map":{"version":3,"names":["api","endpoints","authService","login","credentials","response","post","auth","error","register","userData","logout","console","verifyToken","get","verify","getProfile","profile","updateProfile","profileData","put","changePassword","passwordData"],"sources":["/home/mounikavemula/Documents/PROJECT/quizManagement/frontend/src/services/authService.js"],"sourcesContent":["import { api, endpoints } from './api';\n\nconst authService = {\n  // Login user\n  login: async (credentials) => {\n    try {\n      const response = await api.post(endpoints.auth.login, credentials);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  // Register user\n  register: async (userData) => {\n    try {\n      const response = await api.post(endpoints.auth.register, userData);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  // Logout user\n  logout: async () => {\n    try {\n      await api.post(endpoints.auth.logout);\n    } catch (error) {\n      // Even if logout fails on server, we still want to clear local state\n      console.error('Logout error:', error);\n    }\n  },\n\n  // Verify token\n  verifyToken: async () => {\n    try {\n      const response = await api.get(endpoints.auth.verify);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  // Get user profile\n  getProfile: async () => {\n    try {\n      const response = await api.get(endpoints.auth.profile);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  // Update user profile\n  updateProfile: async (profileData) => {\n    try {\n      const response = await api.put(endpoints.auth.profile, profileData);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  // Change password\n  changePassword: async (passwordData) => {\n    try {\n      const response = await api.put(endpoints.auth.changePassword, passwordData);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  },\n};\n\nexport default authService; "],"mappings":"AAAA,SAASA,GAAG,EAAEC,SAAS,QAAQ,OAAO;AAEtC,MAAMC,WAAW,GAAG;EAClB;EACAC,KAAK,EAAE,MAAOC,WAAW,IAAK;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAACL,SAAS,CAACM,IAAI,CAACJ,KAAK,EAAEC,WAAW,CAAC;MAClE,OAAOC,QAAQ;IACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAC,QAAQ,EAAE,MAAOC,QAAQ,IAAK;IAC5B,IAAI;MACF,MAAML,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAACL,SAAS,CAACM,IAAI,CAACE,QAAQ,EAAEC,QAAQ,CAAC;MAClE,OAAOL,QAAQ;IACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAG,MAAM,EAAE,MAAAA,CAAA,KAAY;IAClB,IAAI;MACF,MAAMX,GAAG,CAACM,IAAI,CAACL,SAAS,CAACM,IAAI,CAACI,MAAM,CAAC;IACvC,CAAC,CAAC,OAAOH,KAAK,EAAE;MACd;MACAI,OAAO,CAACJ,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACvC;EACF,CAAC;EAED;EACAK,WAAW,EAAE,MAAAA,CAAA,KAAY;IACvB,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAML,GAAG,CAACc,GAAG,CAACb,SAAS,CAACM,IAAI,CAACQ,MAAM,CAAC;MACrD,OAAOV,QAAQ;IACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAQ,UAAU,EAAE,MAAAA,CAAA,KAAY;IACtB,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAML,GAAG,CAACc,GAAG,CAACb,SAAS,CAACM,IAAI,CAACU,OAAO,CAAC;MACtD,OAAOZ,QAAQ;IACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAU,aAAa,EAAE,MAAOC,WAAW,IAAK;IACpC,IAAI;MACF,MAAMd,QAAQ,GAAG,MAAML,GAAG,CAACoB,GAAG,CAACnB,SAAS,CAACM,IAAI,CAACU,OAAO,EAAEE,WAAW,CAAC;MACnE,OAAOd,QAAQ;IACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAa,cAAc,EAAE,MAAOC,YAAY,IAAK;IACtC,IAAI;MACF,MAAMjB,QAAQ,GAAG,MAAML,GAAG,CAACoB,GAAG,CAACnB,SAAS,CAACM,IAAI,CAACc,cAAc,EAAEC,YAAY,CAAC;MAC3E,OAAOjB,QAAQ;IACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF;AACF,CAAC;AAED,eAAeN,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}