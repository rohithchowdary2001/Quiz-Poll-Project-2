{"ast":null,"code":"import{api,endpoints}from'./api';const authService={// Login user\nlogin:async credentials=>{try{const response=await api.post(endpoints.auth.login,credentials);return response;}catch(error){throw error;}},// Register user\nregister:async userData=>{try{const response=await api.post(endpoints.auth.register,userData);return response;}catch(error){throw error;}},// Logout user\nlogout:async()=>{try{await api.post(endpoints.auth.logout);}catch(error){// Even if logout fails on server, we still want to clear local state\nconsole.error('Logout error:',error);}},// Verify token\nverifyToken:async()=>{try{const response=await api.get(endpoints.auth.verify);return response;}catch(error){throw error;}},// Get user profile\ngetProfile:async()=>{try{const response=await api.get(endpoints.auth.profile);return response;}catch(error){throw error;}},// Update user profile\nupdateProfile:async profileData=>{try{const response=await api.put(endpoints.auth.profile,profileData);return response;}catch(error){throw error;}},// Change password\nchangePassword:async passwordData=>{try{const response=await api.put(endpoints.auth.changePassword,passwordData);return response;}catch(error){throw error;}}};export default authService;","map":{"version":3,"names":["api","endpoints","authService","login","credentials","response","post","auth","error","register","userData","logout","console","verifyToken","get","verify","getProfile","profile","updateProfile","profileData","put","changePassword","passwordData"],"sources":["/home/mounikavemula/Documents/PROJECT/quizManagement/frontend/src/services/authService.js"],"sourcesContent":["import { api, endpoints } from './api';\n\nconst authService = {\n  // Login user\n  login: async (credentials) => {\n    try {\n      const response = await api.post(endpoints.auth.login, credentials);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  // Register user\n  register: async (userData) => {\n    try {\n      const response = await api.post(endpoints.auth.register, userData);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  // Logout user\n  logout: async () => {\n    try {\n      await api.post(endpoints.auth.logout);\n    } catch (error) {\n      // Even if logout fails on server, we still want to clear local state\n      console.error('Logout error:', error);\n    }\n  },\n\n  // Verify token\n  verifyToken: async () => {\n    try {\n      const response = await api.get(endpoints.auth.verify);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  // Get user profile\n  getProfile: async () => {\n    try {\n      const response = await api.get(endpoints.auth.profile);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  // Update user profile\n  updateProfile: async (profileData) => {\n    try {\n      const response = await api.put(endpoints.auth.profile, profileData);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  // Change password\n  changePassword: async (passwordData) => {\n    try {\n      const response = await api.put(endpoints.auth.changePassword, passwordData);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  },\n};\n\nexport default authService; "],"mappings":"AAAA,OAASA,GAAG,CAAEC,SAAS,KAAQ,OAAO,CAEtC,KAAM,CAAAC,WAAW,CAAG,CAClB;AACAC,KAAK,CAAE,KAAO,CAAAC,WAAW,EAAK,CAC5B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAL,GAAG,CAACM,IAAI,CAACL,SAAS,CAACM,IAAI,CAACJ,KAAK,CAAEC,WAAW,CAAC,CAClE,MAAO,CAAAC,QAAQ,CACjB,CAAE,MAAOG,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACAC,QAAQ,CAAE,KAAO,CAAAC,QAAQ,EAAK,CAC5B,GAAI,CACF,KAAM,CAAAL,QAAQ,CAAG,KAAM,CAAAL,GAAG,CAACM,IAAI,CAACL,SAAS,CAACM,IAAI,CAACE,QAAQ,CAAEC,QAAQ,CAAC,CAClE,MAAO,CAAAL,QAAQ,CACjB,CAAE,MAAOG,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACAG,MAAM,CAAE,KAAAA,CAAA,GAAY,CAClB,GAAI,CACF,KAAM,CAAAX,GAAG,CAACM,IAAI,CAACL,SAAS,CAACM,IAAI,CAACI,MAAM,CAAC,CACvC,CAAE,MAAOH,KAAK,CAAE,CACd;AACAI,OAAO,CAACJ,KAAK,CAAC,eAAe,CAAEA,KAAK,CAAC,CACvC,CACF,CAAC,CAED;AACAK,WAAW,CAAE,KAAAA,CAAA,GAAY,CACvB,GAAI,CACF,KAAM,CAAAR,QAAQ,CAAG,KAAM,CAAAL,GAAG,CAACc,GAAG,CAACb,SAAS,CAACM,IAAI,CAACQ,MAAM,CAAC,CACrD,MAAO,CAAAV,QAAQ,CACjB,CAAE,MAAOG,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACAQ,UAAU,CAAE,KAAAA,CAAA,GAAY,CACtB,GAAI,CACF,KAAM,CAAAX,QAAQ,CAAG,KAAM,CAAAL,GAAG,CAACc,GAAG,CAACb,SAAS,CAACM,IAAI,CAACU,OAAO,CAAC,CACtD,MAAO,CAAAZ,QAAQ,CACjB,CAAE,MAAOG,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACAU,aAAa,CAAE,KAAO,CAAAC,WAAW,EAAK,CACpC,GAAI,CACF,KAAM,CAAAd,QAAQ,CAAG,KAAM,CAAAL,GAAG,CAACoB,GAAG,CAACnB,SAAS,CAACM,IAAI,CAACU,OAAO,CAAEE,WAAW,CAAC,CACnE,MAAO,CAAAd,QAAQ,CACjB,CAAE,MAAOG,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACAa,cAAc,CAAE,KAAO,CAAAC,YAAY,EAAK,CACtC,GAAI,CACF,KAAM,CAAAjB,QAAQ,CAAG,KAAM,CAAAL,GAAG,CAACoB,GAAG,CAACnB,SAAS,CAACM,IAAI,CAACc,cAAc,CAAEC,YAAY,CAAC,CAC3E,MAAO,CAAAjB,QAAQ,CACjB,CAAE,MAAOG,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CACF,CAAC,CAED,cAAe,CAAAN,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}